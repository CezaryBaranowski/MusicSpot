<controls:MetroWindow x:Class="MusicSpot.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:views="clr-namespace:MusicSpot.Views"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        Title="MusicSpot" Height="800" Width="1200" MinHeight="700" MinWidth="1100"
                      ResizeMode="CanResizeWithGrip"
                    
>

    <Window.Resources>
        <ControlTemplate x:Key="ButtonBaseControlTemplate1" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </ControlTemplate>
    </Window.Resources>

    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout
                Margin="0,0,0,0"
                Position="Bottom"
                AreAnimationsEnabled="True"
                Header="MusicSpot Settings"
                Theme="Adapt"
                IsModal="True"
                IsOpen="{Binding IsSettingFlyoutOpen, Mode=TwoWay}">
                <views:SettingsView DataContext="{Binding SettingsViewModel}">
                </views:SettingsView>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>

    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button 
                Click="LaunchMenu"
                Content="Settings"/>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>



    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="10*"></RowDefinition>
            <RowDefinition Height="2*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Name="Menu" MinWidth="200" Width="*"></ColumnDefinition>
            <ColumnDefinition Name ="Content" Width="5*"></ColumnDefinition>
        </Grid.ColumnDefinitions>


        <controls:MetroAnimatedSingleRowTabControl 
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            TabStripMargin="6"
            Background="Transparent"
            
            TabStripPlacement="Top"
            controls:TabControlHelper.Transition="Up"

            SelectedIndex="{Binding SelectedTabIndex}">
            <controls:MetroTabItem Header="Music" Margin="-3,0,3,0">
                <views:MusicView DataContext="{Binding MusicViewModel}" />
            </controls:MetroTabItem>
            <controls:MetroTabItem Header="Discover" Margin="-2,0,3,0"
                                   >
                <views:DiscoveryView DataContext="{Binding DiscoveryViewModel}"/>
            </controls:MetroTabItem>
        </controls:MetroAnimatedSingleRowTabControl>


        <Grid Column="1" Row="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="12*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" MinHeight="50"></RowDefinition>
            </Grid.RowDefinitions>

            <Button Width="30" Height="30" Margin="315,40,285,15" BorderThickness="0" Background="Transparent"
                   Command="{Binding MusicViewModel.PreviousSongCommand}" VerticalAlignment="Top"
                    >
                <iconPacks:Material Width="20" Height="15" Kind="SkipPrevious"
                    />
            </Button>

            <Button x:Name="PlayPauseButton" BorderThickness="0" BorderBrush="White" Margin="350,35,230,15" Width="35" Height="37"
                        Background="Transparent" Grid.Row="0" Grid.Column="0" VerticalAlignment="Top"
                    Command="{Binding MusicViewModel.PlayMusicCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                        <Setter Property="Content" Value="{iconPacks:Material Height=25, Kind=PlayCircleOutline, Width=25}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MusicViewModel.IsPlaying, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=25, Kind=PlayCircleOutline, Width=25}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding MusicViewModel.IsPlaying, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=25, Kind=PauseCircleOutline, Width=25}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Row="0" Grid.Column="0" Height="30" Width="30" Margin="405,40,195,15" BorderThickness="0" Background="Transparent"
                    Command="{Binding MusicViewModel.NextSongCommand}" VerticalAlignment="Top"
                    >
                <iconPacks:Material Width="20" Height="15" Kind="SkipNext"
                    />
            </Button>

            <Label x:Name="CurrentTrackPositionLabel" Grid.Row="0" Grid.Column="0"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Margin="70,80,0,0"
                   
                   Width="40"
                   Height="25"
                   >
                <TextBlock>
                    <TextBlock Text="{Binding MusicViewModel.TrackPosition, StringFormat=m\\:ss}" />
                   </TextBlock>
            </Label>
            <Slider x:Name="MusicProgressBar" Grid.Row="0" Grid.Column="0"
                    VerticalAlignment="Top"
                             Width="Auto" Margin="110,85,0,0"
                             Height="20"
                             MinHeight="15"
                             IsEnabled="True"
                             IsMoveToPointEnabled="True"
                             ValueChanged="MusicProgressBar_OnValueChanged"
                             Maximum="{Binding MusicViewModel.TrackTotalTime.TotalSeconds, Mode=OneWay}"
                             Minimum="0"
                             Value="{Binding MusicViewModel.TrackPosition.TotalSeconds, Mode=OneWay, Delay=500}"
                                       >
            </Slider>

            <Label x:Name="CurrentTrackLengthLabel" Grid.Column="1" Grid.Row="0"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Margin="8,80,0,0"
                   
                   Width="40"
                   Height="25"
            >
                <TextBlock>
                    <TextBlock Text="{Binding MusicViewModel.TrackTotalTime, StringFormat=m\\:ss}" />
                </TextBlock>
            </Label>

            <Button x:Name="MuteOnOff" Width="25" Height="25" Background="Transparent" 
                Grid.Column="2" Grid.Row="0" Margin="0,83,160,0" Command="{Binding MusicViewModel.MuteCommand}"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Left"
                BorderThickness="0">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                        <Setter Property="Content" Value="{iconPacks:Material Height=15, Width=15, Kind=VolumeOff}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MusicViewModel.IsMuted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=15, Width=15, Kind=VolumeMute}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding MusicViewModel.IsMuted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=15, Width=15, Kind=VolumeHigh}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Slider x:Name="VolumeControl" Grid.Row="0" Grid.Column="2"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Left"
                        Minimum="0"
                        Maximum="100"
                        Value="{Binding MusicViewModel.Volume, Mode=TwoWay}"
                        Height="25"
                        Width="100" Margin="35,83,34,0">
            </Slider>

        </Grid>



        <StackPanel Grid.Column="0" Grid.Row="2" x:Name="NamesLabel" 
                        Orientation="Vertical" Margin="0,0,0,0"
            >
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">

                </Style>
            </StackPanel.Style>
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                    <Setter Property="Margin" Value="10,0,0,0"/>
                    <Setter Property="BorderThickness" Value="0"></Setter>
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                </Style>
            </StackPanel.Resources>


            <Button
                   x:Name="ArtistNameButton"
                   Width="Auto"
                   Height="Auto"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   Cursor="Hand"
                   Padding="0,0,0,0"
                   Margin="10,50,0,0" 
                   MinHeight="30"
                   Template="{DynamicResource ButtonBaseControlTemplate1}"
                   >
                <TextBlock Text="{Binding MusicViewModel.CurrentlyPlayedSong.Artist}"
                           TextWrapping="Wrap"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           TextDecorations="Underline"
                           Background="Transparent"
                           FontSize="14"
                           FontWeight="UltraLight"
                           FontStyle="Normal"
                           MinHeight="25"
                           FontFamily="Lucida Sans" 
                           Height="Auto" 
                           Width="Auto">
                </TextBlock>
            </Button>

            <Button x:Name="TitleNameButton"
                   Width="Auto"
                   Height="Auto"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   Cursor="Hand"
                   Padding="0,0,0,0"
                   Margin="10,-5,0,0"
                   Template="{DynamicResource ButtonBaseControlTemplate1}"
                    >

                <TextBlock Text="{Binding MusicViewModel.CurrentlyPlayedSong.Title}"
                           TextWrapping="Wrap"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           TextDecorations="Underline"
                           Background="Transparent"
                           FontSize="14"
                           FontWeight="UltraLight"
                           FontStyle="Normal"
                           MinHeight="25"
                           FontFamily="Lucida Sans" 
                           Height="Auto" 
                           Width="Auto">

                </TextBlock>
            </Button>

        </StackPanel>


    </Grid>
</controls:MetroWindow>
