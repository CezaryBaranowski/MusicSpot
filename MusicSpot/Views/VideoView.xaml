<UserControl x:Class="MusicSpot.Views.VideoView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MusicSpot.Views"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
>
    <Grid Column="1" Row="1" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <Button Width="35" Height="35" Margin="20,15,0,5" BorderThickness="0" Background="Transparent"
                   Command="{Binding PreviousSongCommand}"
                    >
            <iconPacks:Material Width="25" Height="20" Kind="SkipPrevious"
                    />
        </Button>

        <Button x:Name="PlayPauseButton" BorderThickness="0" BorderBrush="White" Margin="120,10,0,0" Width="45" Height="45"
                        Background="Transparent" Grid.Row="0" Grid.Column="0"
                    Command="{Binding PlayMusicCommand}">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                    <Setter Property="Content" Value="{iconPacks:Material Height=20, Kind=PlayCircleOutline, Width=20}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                            <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=30, Kind=PlayCircleOutline, Width=30}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsPlaying, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=30, Kind=PauseCircleOutline, Width=30}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Grid.Row="0" Grid.Column="0" Height="35" Width="35" Margin="220,15,0,5" BorderThickness="0" Background="Transparent"
                    Command="{Binding NextSongCommand}"
                    >
            <iconPacks:Material Width="25" Height="20" Kind="SkipNext"
                    />
        </Button>

        <Label x:Name="CurrentTrackPositionLabel"
                   Grid.Row="1" Grid.Column="0"
                   HorizontalAlignment="Left"
                   Margin="70,-5,0,8"
                   VerticalContentAlignment="Top"
                   Width="40"
                   Height="25"
                   >
            <TextBlock>
                    <TextBlock Text="{Binding TrackPosition, StringFormat=m\\:ss}" />
                   </TextBlock>
        </Label>
        <Slider x:Name="MusicProgressBar" Grid.Row="1" Grid.Column="0"
                             Width="Auto" Margin="110,0,0,10"
                             Height="20"
                             MinHeight="2"
                             IsEnabled="True"
                             IsMoveToPointEnabled="True"
                             ValueChanged="MusicProgressBar_OnValueChanged"
                             Maximum="{Binding TrackTotalTime.TotalSeconds, Mode=OneWay}"
                             Minimum="0"
                             Value="{Binding TrackPosition.TotalSeconds, Mode=OneWay, Delay=100}"
                                       >
        </Slider>

        <Label x:Name="CurrentTrackLengthLabel"
                   Grid.Row="1" Grid.Column="1"
                   HorizontalAlignment="Left"
                   Margin="0,-5,0,8"
                   VerticalContentAlignment="Top"
                   Width="40"
                   Height="25"
            >
            <TextBlock>
                    <TextBlock Text="{Binding TrackTotalTime, StringFormat=m\\:ss}" />
                </TextBlock>
        </Label>

        <Button x:Name="MuteOnOff" Width="25" Height="25" Background="Transparent" 
                Grid.Column="1" Grid.Row="1" Margin="30,-10,130,0" Command="{Binding MuteCommand}"
                BorderThickness="0">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                    <Setter Property="Content" Value="{iconPacks:Material Height=15, Width=15, Kind=VolumeOff}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMuted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=15, Width=15, Kind=VolumeMute}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsMuted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                            <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=15, Width=15, Kind=VolumeHigh}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Slider x:Name="VolumeControl" Grid.Row="1" Grid.Column="1"
                        Minimum="0"
                        Maximum="100"
                        Value="{Binding Volume, Mode=TwoWay}"
                        Height="25"
                        Width="100" Margin="40,-5,0,0">
        </Slider>

    </Grid>
</UserControl>
