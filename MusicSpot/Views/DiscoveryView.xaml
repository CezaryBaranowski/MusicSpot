<UserControl x:Class="MusicSpot.Views.DiscoveryView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:local="clr-namespace:MusicSpot.Views"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:global2="clr-namespace:"
        xmlns:viewModels="clr-namespace:MusicSpot.ViewModels"
        mc:Ignorable="d"
             d:DesignHeight="800" d:DesignWidth="1000"
             
       >
    <UserControl.Resources>
        <global2:ImageToSourceConverter x:Name="ImageToSourceConverter"
                                       x:Key="ImageToSourceConverter">
        </global2:ImageToSourceConverter>

        <ControlTemplate x:Key="ButtonBaseControlTemplate1" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </ControlTemplate>
    </UserControl.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="6*"></RowDefinition>
            <RowDefinition Height="*" MinHeight="90"></RowDefinition>

        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="5*"></ColumnDefinition>

        </Grid.ColumnDefinitions>

        <!--Left Navigation panel-->

        <StackPanel Grid.Column="0" Grid.Row="0" x:Name="NavigationPanel" 
                    Orientation="Vertical" Margin="0,10,0,0"
                    >
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">

                </Style>
            </StackPanel.Style>
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                    <Setter Property="Margin" Value="10,10,0,0"/>
                    <Setter Property="BorderThickness" Value="0"></Setter>
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                </Style>
            </StackPanel.Resources>

            <Image Margin="10,40,0,0"
               Width ="Auto"
               Height="Auto" 
               MinHeight="150"
                   Source="{Binding Path=CurrentlyPlayedSong.AlbumArt, Converter={StaticResource ImageToSourceConverter}}"
               >
                <Image.Effect>
                    <DropShadowEffect BlurRadius="50"></DropShadowEffect>
                </Image.Effect>
                <Image.Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="UseLayoutRounding" Value="True"></Setter>
                    </Style>
                </Image.Style>
            </Image>
        </StackPanel>

        <StackPanel Grid.Column="0" Grid.Row="1" x:Name="NamesLabel" 
                    Orientation="Vertical" Margin="0,0,0,0"
        >
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">

                </Style>
            </StackPanel.Style>
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                    <Setter Property="Margin" Value="10,10,0,0"/>
                    <Setter Property="BorderThickness" Value="0"></Setter>
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                </Style>
            </StackPanel.Resources>

            <Button
                   x:Name="ArtistNameButton"
                   Width="Auto"
                   Height="Auto"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   Cursor="Hand"
                   Padding="0,0,0,0"
                   Margin="10,15,0,0" 
                MinHeight="30"
                   Template="{DynamicResource ButtonBaseControlTemplate1}"
                   >
                <TextBlock Text="{Binding CurrentlyPlayedSong.Artist}"
                           TextWrapping="Wrap"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           TextDecorations="Underline"
                           Background="Transparent"
                           FontSize="14"
                           FontWeight="UltraLight"
                           FontStyle="Normal"
                           MinHeight="25"
                           FontFamily="Lucida Sans" 
                           Height="Auto" 
                           Width="Auto">
                </TextBlock>
            </Button>

            <Button x:Name="TitleNameButton"
                   Width="Auto"
                   Height="Auto"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   Cursor="Hand"
                   Padding="0,0,0,0"
                   Margin="10,0,0,0"
                   Template="{DynamicResource ButtonBaseControlTemplate1}"
                    >

                <TextBlock Text="{Binding CurrentlyPlayedSong.Title}"
                           TextWrapping="Wrap"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           TextDecorations="Underline"
                           Background="Transparent"
                           FontSize="14"
                           FontWeight="UltraLight"
                           FontStyle="Normal"
                           MinHeight="25"
                           FontFamily="Lucida Sans" 
                           Height="Auto" 
                           Width="Auto">

                </TextBlock>
            </Button>
        </StackPanel>

        <!--MainMusicGrid-->

        <Grid x:Name="MainDiscoveryPanel"
            Row="0"
            Column="1"
              ClipToBounds="True"
              Margin="5,5,0,0"
            HorizontalAlignment="Stretch">

            <Image Grid.Column="0"
                   Grid.Row="0"
                Margin="10,10,10,0"
                   Stretch="UniformToFill"
                   Source="{Binding Path=CurrentlyPlayedSong.AlbumArt, Converter={StaticResource ImageToSourceConverter}}"
            >

                <Image.Effect>
                    <BlurEffect Radius="20"></BlurEffect>

                </Image.Effect>
                <Image.Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="ClipToBounds" Value="True"></Setter>
                        <Setter Property="Stretch" Value="None"></Setter>
                    </Style>
                </Image.Style>
            </Image>

        </Grid>


        <!--Lower playing control panel-->

        <Grid Column="1" Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="12*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" MinHeight="60"></RowDefinition>
                <RowDefinition Height="*" MinHeight="60"></RowDefinition>
            </Grid.RowDefinitions>

            <Button Width="30" Height="30" Margin="315,10,285,15" BorderThickness="0" Background="Transparent"
                   Command="{Binding PreviousSongCommand}" VerticalAlignment="Center"
                    >
                <iconPacks:Material Width="20" Height="15" Kind="SkipPrevious"
                    />
            </Button>

            <Button x:Name="PlayPauseButton" BorderThickness="0" BorderBrush="White" Margin="350,10,230,15" Width="35" Height="37"
                        Background="Transparent" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"
                    Command="{Binding PlayMusicCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                        <Setter Property="Content" Value="{iconPacks:Material Height=25, Kind=PlayCircleOutline, Width=25}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPlaying, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=25, Kind=PlayCircleOutline, Width=25}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPlaying, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=25, Kind=PauseCircleOutline, Width=25}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Row="0" Grid.Column="0" Height="30" Width="30" Margin="405,10,195,15" BorderThickness="0" Background="Transparent"
                    Command="{Binding NextSongCommand}" VerticalAlignment="Center"
                    >
                <iconPacks:Material Width="20" Height="15" Kind="SkipNext"
                    />
            </Button>

            <Label x:Name="CurrentTrackPositionLabel" Grid.Row="1" Grid.Column="0"
                   HorizontalAlignment="Left"
                   Margin="70,0,0,40"
                   VerticalContentAlignment="Top"
                   Width="40"
                   Height="25"
                   >
                <TextBlock>
                    <TextBlock Text="{Binding TrackPosition, StringFormat=m\\:ss}" />
                   </TextBlock>
            </Label>
            <Slider x:Name="MusicProgressBar" Grid.Row="1" Grid.Column="0"
                    VerticalAlignment="Top"
                             Width="Auto" Margin="110,5,0,0"
                             Height="20"
                             MinHeight="15"
                             IsEnabled="True"
                             IsMoveToPointEnabled="True"
                             ValueChanged="MusicProgressBar_OnValueChanged"
                             Maximum="{Binding TrackTotalTime.TotalSeconds, Mode=OneWay}"
                             Minimum="0"
                             Value="{Binding TrackPosition.TotalSeconds, Mode=OneWay, Delay=500}"
                                       >
            </Slider>

            <Label x:Name="CurrentTrackLengthLabel" Grid.Column="1" Grid.Row="1"
                   HorizontalAlignment="Left"
                   Margin="8,0,0,40"
                   VerticalContentAlignment="Top"
                   Width="40"
                   Height="25"
            >
                <TextBlock>
                    <TextBlock Text="{Binding TrackTotalTime, StringFormat=m\\:ss}" />
                </TextBlock>
            </Label>

            <Button x:Name="MuteOnOff" Width="25" Height="25" Background="Transparent" 
                Grid.Column="2" Grid.Row="1" Margin="0,3,160,0" Command="{Binding MuteCommand}"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Left"
                BorderThickness="0">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                        <Setter Property="Content" Value="{iconPacks:Material Height=15, Width=15, Kind=VolumeOff}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMuted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=15, Width=15, Kind=VolumeMute}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMuted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=15, Width=15, Kind=VolumeHigh}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Slider x:Name="VolumeControl" Grid.Row="1" Grid.Column="2"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Left"
                        Minimum="0"
                        Maximum="100"
                        Value="{Binding Volume, Mode=TwoWay}"
                        Height="25"
                        Width="100" Margin="35,3,34,0">
            </Slider>

        </Grid>

    </Grid>
</UserControl>
