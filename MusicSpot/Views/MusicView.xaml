<UserControl x:Class="MusicSpot.Views.MusicView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:local="clr-namespace:MusicSpot.Views"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:global2="clr-namespace:"
        mc:Ignorable="d"
             d:DesignHeight="800" d:DesignWidth="1000"
       >

    <UserControl.Resources>
        <ResourceDictionary>
            <global2:ImageToSourceConverter x:Name="ImageToSourceConverter"
             x:Key="ImageToSourceConverter">
            </global2:ImageToSourceConverter>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="7*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>

        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="5*"></ColumnDefinition>

        </Grid.ColumnDefinitions>

        <!--Left Navigation panel-->

        <StackPanel Grid.Column="0" Grid.Row="0" x:Name="NavigationPanel" 
                    Orientation="Vertical" Margin="0,10,0,0"
                    Background="#FF232222">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                    <Setter Property="Margin" Value="10,10,0,0"/>
                    <Setter Property="BorderThickness" Value="0"></Setter>
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                </Style>
            </StackPanel.Resources>
            <Label FontSize="18" FontStretch="Expanded" Margin="10,0,0,0">Local Music</Label>
            <Button>Songs</Button>
            <Button>Artists</Button>
            <Button>Albums</Button>

            <TextBlock
                      Margin="15,20,0,0"
                      Text="Block Editing Files" />
            <CheckBox 
                      HorizontalAlignment="Left"
                      Margin="15,10,0,0"
                      IsChecked="{Binding IsEditingFilesEnabled}" />
            <TextBlock 
                      Margin="10,10,0,0"
                      Text="Show Music From Directories" />
            <ComboBox x:Name="MusicDirectoriesComboBox"
                      Margin="15,10,0,0"
                      HorizontalAlignment="Stretch"
                      SelectedItem="{Binding MusicSelectedDirectory}"
                      SelectedIndex="0"
                      SelectionChanged="ChangeMusicDirectory"
                      ItemsSource="{Binding MusicDirectories, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
            </ComboBox>


        <Image Margin="10,30,10,0"
               Width ="150"
               Height="150" 
               Source="{Binding Path=CurrentlySelectedSong.AlbumArt, Converter={StaticResource ImageToSourceConverter}}"
               >
        
        </Image>

        </StackPanel>


        <!--MainMusicGrid-->

        <Grid x:Name="MainMusicPanel"
            Row="0"
            Column="1"
              Margin="5,5,0,0"
            HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="2*"></RowDefinition>
            </Grid.RowDefinitions>


            <DataGrid x:Name="MainMusicDataGrid"
              Grid.Column="0"
              Grid.Row="1"
              RenderOptions.ClearTypeHint="Enabled"
              TextOptions.TextFormattingMode="Display"
              Margin="5"
              RowHeight="32"
              IsReadOnly="{Binding IsEditingFilesEnabled}"
              SelectionUnit="FullRow"
              ItemsSource="{Binding Path=Songs}"
              SelectedItem="{Binding CurrentlySelectedSong, Mode=OneWayToSource}"
              AutoGenerateColumns="False"
              GridLinesVisibility="Horizontal"
                      >
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                        <Setter Property="Margin" Value="0,0,20,0"></Setter>
                    </Style> 
                </DataGrid.CellStyle>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
                        <Setter Property="Margin" Value="0,0,0,0"></Setter>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Title"
                                        Width="2*"
                                        Binding="{Binding Title}" />
                    <DataGridTextColumn Header="Artist"
                                        Width="2*"
                                        Binding="{Binding Artist}" />
                    <DataGridTextColumn Header="Album"
                                        Width="2*"
                                        Binding="{Binding Album}" 
                                        />
                    <DataGridTextColumn
                                        IsReadOnly="True"
                                        Header="Length"
                                        Width="*">
                                        <DataGridTextColumn.Binding>
                                        <Binding Path="TotalTime" StringFormat="m\:ss"/>
                                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

        </Grid>


        <!--Lower playing control panel-->

        <Grid Column="1" Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <Button Width="35" Height="35" Margin="20,15,0,0" BorderThickness="0" Background="Transparent">
                <iconPacks:Material Width="25" Height="20" Kind="SkipPrevious"
                    />
            </Button>

            <Button BorderThickness="0" BorderBrush="White" Margin="120,10,0,0" Width="50" Height="50"
                        Background="Transparent" Grid.Row="0" Grid.Column="0" Click="PlayButton_OnClick">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                        <Setter Property="Content" Value="{iconPacks:Material Height=20, Kind=PlayCircleOutline, Width=20}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPlaying, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=35, Kind=PlayCircleOutline, Width=35}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPlaying, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=35, Kind=PauseCircleOutline, Width=35}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Row="0" Grid.Column="0" Height="35" Width="35" Margin="220,15,0,0" BorderThickness="0" Background="Transparent">
                <iconPacks:Material Width="25" Height="20" Kind="SkipNext"
                    />
            </Button>

            <controls:MetroProgressBar x:Name="MusicProgressBar" Grid.Row="1" Grid.Column="0"
                             Width="300" Margin="110,0,0,0"
                             Height="4"
                             MinHeight="2"
                             Maximum="100"
                             Minimum="0"
                             Value="{Binding Value}">

            </controls:MetroProgressBar>

            <Button x:Name="MuteOnOff" Width="25" Height="25" Background="Transparent" 
                Grid.Column="1" Grid.Row="1" Margin="0,-6,130,0" Click="Mute"
                BorderThickness="0">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                        <Setter Property="Content" Value="{iconPacks:Material Height=15, Width=15, Kind=VolumeOff}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMuted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=15, Width=15, Kind=VolumeMute}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMuted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                <Setter Property="ContentControl.Content"  Value="{iconPacks:Material Height=15, Width=15, Kind=VolumeHigh}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Slider x:Name="VolumeControl" Grid.Row="1" Grid.Column="1"
                        Minimum="0"
                        Maximum="100"
                        Value="100"
                        Height="25"
                        Width="100" Margin="10,-4,0,0">
            </Slider>

        </Grid>

    </Grid>
</UserControl>
